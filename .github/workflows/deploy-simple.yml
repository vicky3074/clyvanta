name: üöÄ Simple Production Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Deploy to DigitalOcean
      run: |
        echo "üöÄ Starting simple deployment..."
        
        # Setup SSH
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts
        
        # Simple deployment with robust cleanup
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ubuntu@${{ secrets.DROPLET_IP }} << 'EOF'
          echo "üì¶ Deploying to production..."
          cd clyvanta-new
          
          echo "üìÑ Pulling latest code..."
          git pull origin main
          
          echo "üõë Stopping and cleaning containers..."
          # Stop containers by name (more reliable than compose down)
          docker stop clyvanta-nginx clyvanta-website clyvanta-postgres || true
          docker rm clyvanta-nginx clyvanta-website clyvanta-postgres || true
          
          # Clean up Docker resources
          docker system prune -f
          
          # Ensure ports are free (kill any processes using our ports)
          sudo fuser -k 80/tcp 8080/tcp 2>/dev/null || true
          
          echo "‚è≥ Waiting for ports to be available..."
          sleep 5
          
          echo "üöÄ Starting fresh containers..."
          docker compose up -d --build
          
          echo "‚è≥ Waiting 30s for startup..."
          sleep 30
          
          echo "üîç Basic health check..."
          if curl -f -s --max-time 10 http://localhost:8080 > /dev/null; then
            echo "‚úÖ Deployment successful!"
          else
            echo "‚ùå Health check failed"
            docker ps
            exit 1
          fi
        EOF
        
        # Cleanup
        rm -f ~/.ssh/deploy_key
        echo "‚úÖ Deployment complete"