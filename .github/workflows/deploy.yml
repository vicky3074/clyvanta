name: üöÄ Production Deployment (Docker Hub)

on:
  push:
    branches: [ main, staging ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and Push Docker Image
      run: |
        echo "üî® Building Docker image for branch: ${{ github.ref_name }}"
        docker build -t vicky3074/clyvanta:${{ github.ref_name }} .
        echo "üì§ Pushing to Docker Hub..."
        docker push vicky3074/clyvanta:${{ github.ref_name }}
        echo "‚úÖ Successfully pushed vicky3074/clyvanta:${{ github.ref_name }}"
        
    - name: Deploy to Production
      if: github.ref == 'refs/heads/main'
      run: |
        echo "üöÄ Deploying to production via SSH..."
        
        # Setup SSH
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts
        
        # Deploy to server using Docker Hub images
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ubuntu@${{ secrets.DROPLET_IP }} << 'EOF'
          echo "üì¶ Deploying from Docker Hub..."
          cd clyvanta-new
          
          echo "‚¨áÔ∏è Pulling latest images from Docker Hub..."
          docker pull vicky3074/clyvanta:latest
          
          echo "üõë Stopping existing containers..."
          docker compose down || true
          
          echo "üöÄ Starting new containers from Docker Hub..."
          docker compose up -d
          
          echo "‚úÖ Docker Hub deployment completed!"
        EOF
        
        # Cleanup SSH key
        rm -f ~/.ssh/deploy_key
        echo "‚úÖ Production deployment completed"
        
    - name: Verify Deployment
      if: github.ref == 'refs/heads/main'
      run: |
        echo "üè• Verifying deployment..."
        sleep 30
        
        # Test HTTP
        if curl -f -s http://159.203.61.237:8080 > /dev/null; then
          echo "‚úÖ HTTP is working"
        else
          echo "‚ùå HTTP verification failed"
          exit 1
        fi
        
        # Test HTTPS (through Cloudflare)
        if curl -f -s https://clyvanta.com > /dev/null; then
          echo "‚úÖ HTTPS is working"
        else
          echo "‚ö†Ô∏è HTTPS may still be propagating"
        fi
        
        echo "üåç Deployment verification completed!"