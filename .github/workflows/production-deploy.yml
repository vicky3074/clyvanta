name: Production Deployment Pipeline

on:
  push:
    branches: [ main ]

env:
  NODE_VERSION: '20'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build

  production-deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: Deploy via Webhook (Primary)
      id: webhook_deploy
      continue-on-error: true
      run: |
        echo "Attempting webhook deployment..."
        
        # Check webhook health first
        if curl -f -s --max-time 10 "http://${{ secrets.DROPLET_IP }}:4040/health" > /dev/null; then
          echo "Webhook service healthy, proceeding with deployment..."
          
          # Deploy via webhook
          RESPONSE=$(curl -f -s --max-time 300 "http://${{ secrets.DROPLET_IP }}:4040/deploy?token=clyvanta-deploy-2025")
          
          if [[ "$RESPONSE" == *"success"* ]]; then
            echo "Webhook deployment successful!"
            echo "webhook_success=true" >> $GITHUB_OUTPUT
          else
            echo "Webhook deployment failed: $RESPONSE"
            echo "webhook_success=false" >> $GITHUB_OUTPUT
            exit 1
          fi
        else
          echo "Webhook service not healthy, will fallback to SSH"
          echo "webhook_success=false" >> $GITHUB_OUTPUT
          exit 1
        fi

    - name: Deploy via SSH (Fallback)
      if: steps.webhook_deploy.outputs.webhook_success != 'true'
      run: |
        echo "Webhook failed, using SSH deployment..."
        
        # Setup SSH with timeout
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts
        
        # SSH deployment with extended timeouts
        timeout 600 ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -o ConnectTimeout=30 ubuntu@${{ secrets.DROPLET_IP }} << 'EOF'
          echo "SSH deployment starting..."
          cd clyvanta-new || { echo "Directory not found"; exit 1; }
          
          # Pull latest changes (faster than full clone)
          git fetch origin main
          git reset --hard origin/main
          
          # Optimized deployment with build caching
          echo "Building optimized containers..."
          docker compose build clyvanta-web clyvanta-nginx
          
          # Start containers with restart policy
          echo "Starting containers..."
          docker compose up -d
          
          # Restart webhook service if needed
          echo "Ensuring webhook service is running..."
          docker-compose -f docker-compose.webhook.yml up -d || echo "Webhook service start skipped"
          
          # Wait for containers to be healthy
          sleep 30
          
          # Verify deployment
          if curl -f -s --max-time 10 http://localhost:8080 > /dev/null; then
            echo "SSH deployment successful!"
          else
            echo "SSH deployment verification failed"
            exit 1
          fi
        EOF
        
        # Cleanup
        rm -f ~/.ssh/deploy_key

    - name: Verify Final Deployment
      run: |
        echo "Final deployment verification..."
        sleep 15
        
        # Test website response
        for i in {1..3}; do
          if curl -f -s --max-time 10 http://${{ secrets.DROPLET_IP }}:8080 > /dev/null; then
            echo "✅ Deployment verification successful!"
            exit 0
          else
            echo "⚠️ Verification attempt $i failed, retrying..."
            sleep 10
          fi
        done
        
        echo "❌ Deployment verification failed after 3 attempts"
        exit 1